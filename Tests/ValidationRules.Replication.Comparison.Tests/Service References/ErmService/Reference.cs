//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ValidationRules.Replication.Comparison.Tests.ErmService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationResult", Namespace="http://schemas.datacontract.org/2004/07/DoubleGis.Erm.BLCore.API.OrderValidation")]
    [System.SerializableAttribute()]
    public partial class ErmValidationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ValidationRules.Replication.Comparison.Tests.ErmService.ErmOrderValidationMessage[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ValidationRules.Replication.Comparison.Tests.ErmService.ErmOrderValidationMessage[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderCount {
            get {
                return this.OrderCountField;
            }
            set {
                if ((this.OrderCountField.Equals(value) != true)) {
                    this.OrderCountField = value;
                    this.RaisePropertyChanged("OrderCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderValidationMessage", Namespace="http://schemas.datacontract.org/2004/07/DoubleGis.Erm.BLCore.API.OrderValidation." +
        "Remote")]
    [System.SerializableAttribute()]
    public partial class ErmOrderValidationMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object> AdditionalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RuleCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TargetEntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetEntityTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ValidationRules.Replication.Comparison.Tests.ErmService.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageText {
            get {
                return this.MessageTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTextField, value) != true)) {
                    this.MessageTextField = value;
                    this.RaisePropertyChanged("MessageText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleCode {
            get {
                return this.RuleCodeField;
            }
            set {
                if ((this.RuleCodeField.Equals(value) != true)) {
                    this.RuleCodeField = value;
                    this.RaisePropertyChanged("RuleCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TargetEntityId {
            get {
                return this.TargetEntityIdField;
            }
            set {
                if ((this.TargetEntityIdField.Equals(value) != true)) {
                    this.TargetEntityIdField = value;
                    this.RaisePropertyChanged("TargetEntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetEntityTypeCode {
            get {
                return this.TargetEntityTypeCodeField;
            }
            set {
                if ((this.TargetEntityTypeCodeField.Equals(value) != true)) {
                    this.TargetEntityTypeCodeField = value;
                    this.RaisePropertyChanged("TargetEntityTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ValidationRules.Replication.Comparison.Tests.ErmService.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageType", Namespace="http://schemas.datacontract.org/2004/07/DoubleGis.Erm.BLCore.API.OrderValidation")]
    public enum MessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimePeriod", Namespace="http://2gis.ru/erm/api/common/2013/09")]
    [System.SerializableAttribute()]
    public partial struct TimePeriod : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationType", Namespace="http://schemas.datacontract.org/2004/07/DoubleGis.Erm.BLCore.API.OrderValidation")]
    public enum ValidationType : int {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingleOrderOnRegistration = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreReleaseBeta = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreReleaseFinal = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualReport = 8,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualReportWithAccountsCheck = 16,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingleOrderOnStateChanging = 32,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", ConfigurationName="ErmService.IOrderValidationApplicationRestService", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface IOrderValidationApplicationRestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://2gis.ru/erm/api/ordervalidation/2013/03/IOrderValidationApplicationRestSer" +
            "vice/ValidateSingleOrderRest", ReplyAction="http://2gis.ru/erm/api/ordervalidation/2013/03/IOrderValidationApplicationRestSer" +
            "vice/ValidateSingleOrderRestResponse")]
        ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderRestResponse ValidateSingleOrderRest(ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderRestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://2gis.ru/erm/api/ordervalidation/2013/03/IOrderValidationApplicationRestSer" +
            "vice/ValidateSingleOrderStateTransferRest", ReplyAction="http://2gis.ru/erm/api/ordervalidation/2013/03/IOrderValidationApplicationRestSer" +
            "vice/ValidateSingleOrderStateTransferRestResponse")]
        ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderStateTransferRestResponse ValidateSingleOrderStateTransferRest(ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderStateTransferRestRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSingleOrderRest", WrapperNamespace="http://2gis.ru/erm/api/ordervalidation/2013/03", IsWrapped=true)]
    public partial class ValidateSingleOrderRestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=0)]
        public string orderId;
        
        public ValidateSingleOrderRestRequest() {
        }
        
        public ValidateSingleOrderRestRequest(string orderId) {
            this.orderId = orderId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSingleOrderRestResponse", WrapperNamespace="http://2gis.ru/erm/api/ordervalidation/2013/03", IsWrapped=true)]
    public partial class ValidateSingleOrderRestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=0)]
        public ValidationRules.Replication.Comparison.Tests.ErmService.ErmValidationResult ValidateSingleOrderRestResult;
        
        public ValidateSingleOrderRestResponse() {
        }
        
        public ValidateSingleOrderRestResponse(ValidationRules.Replication.Comparison.Tests.ErmService.ErmValidationResult ValidateSingleOrderRestResult) {
            this.ValidateSingleOrderRestResult = ValidateSingleOrderRestResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSingleOrderStateTransferRest", WrapperNamespace="http://2gis.ru/erm/api/ordervalidation/2013/03", IsWrapped=true)]
    public partial class ValidateSingleOrderStateTransferRestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=0)]
        public string orderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=1)]
        public string newOrderState;
        
        public ValidateSingleOrderStateTransferRestRequest() {
        }
        
        public ValidateSingleOrderStateTransferRestRequest(string orderId, string newOrderState) {
            this.orderId = orderId;
            this.newOrderState = newOrderState;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSingleOrderStateTransferRestResponse", WrapperNamespace="http://2gis.ru/erm/api/ordervalidation/2013/03", IsWrapped=true)]
    public partial class ValidateSingleOrderStateTransferRestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=0)]
        public ValidationRules.Replication.Comparison.Tests.ErmService.ErmValidationResult ValidateSingleOrderStateTransferRestResult;
        
        public ValidateSingleOrderStateTransferRestResponse() {
        }
        
        public ValidateSingleOrderStateTransferRestResponse(ValidationRules.Replication.Comparison.Tests.ErmService.ErmValidationResult ValidateSingleOrderStateTransferRestResult) {
            this.ValidateSingleOrderStateTransferRestResult = ValidateSingleOrderStateTransferRestResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderValidationApplicationRestServiceChannel : ValidationRules.Replication.Comparison.Tests.ErmService.IOrderValidationApplicationRestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderValidationApplicationRestServiceClient : System.ServiceModel.ClientBase<ValidationRules.Replication.Comparison.Tests.ErmService.IOrderValidationApplicationRestService>, ValidationRules.Replication.Comparison.Tests.ErmService.IOrderValidationApplicationRestService {
        
        public OrderValidationApplicationRestServiceClient() {
        }
        
        public OrderValidationApplicationRestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderValidationApplicationRestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderValidationApplicationRestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderValidationApplicationRestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderRestResponse ValidateSingleOrderRest(ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderRestRequest request) {
            return base.Channel.ValidateSingleOrderRest(request);
        }
        
        public ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderStateTransferRestResponse ValidateSingleOrderStateTransferRest(ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderStateTransferRestRequest request) {
            return base.Channel.ValidateSingleOrderStateTransferRest(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", ConfigurationName="ErmService.IOrderValidationApplicationService", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface IOrderValidationApplicationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://2gis.ru/erm/api/ordervalidation/2013/03/IOrderValidationApplicationService" +
            "/ValidateSingleOrder", ReplyAction="http://2gis.ru/erm/api/ordervalidation/2013/03/IOrderValidationApplicationService" +
            "/ValidateSingleOrderResponse")]
        ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderResponse ValidateSingleOrder(ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://2gis.ru/erm/api/ordervalidation/2013/03/IOrderValidationApplicationService" +
            "/ValidateSingleOrderStateChange", ReplyAction="http://2gis.ru/erm/api/ordervalidation/2013/03/IOrderValidationApplicationService" +
            "/ValidateSingleOrderStateChangeResponse")]
        ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderStateChangeResponse ValidateSingleOrderStateChange(ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderStateChangeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://2gis.ru/erm/api/ordervalidation/2013/03/IOrderValidationApplicationService" +
            "/ValidateOrders", ReplyAction="http://2gis.ru/erm/api/ordervalidation/2013/03/IOrderValidationApplicationService" +
            "/ValidateOrdersResponse")]
        ValidationRules.Replication.Comparison.Tests.ErmService.ValidateOrdersResponse ValidateOrders(ValidationRules.Replication.Comparison.Tests.ErmService.ValidateOrdersRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSingleOrder", WrapperNamespace="http://2gis.ru/erm/api/ordervalidation/2013/03", IsWrapped=true)]
    public partial class ValidateSingleOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=0)]
        public long orderId;
        
        public ValidateSingleOrderRequest() {
        }
        
        public ValidateSingleOrderRequest(long orderId) {
            this.orderId = orderId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSingleOrderResponse", WrapperNamespace="http://2gis.ru/erm/api/ordervalidation/2013/03", IsWrapped=true)]
    public partial class ValidateSingleOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=0)]
        public ValidationRules.Replication.Comparison.Tests.ErmService.ErmValidationResult ValidateSingleOrderResult;
        
        public ValidateSingleOrderResponse() {
        }
        
        public ValidateSingleOrderResponse(ValidationRules.Replication.Comparison.Tests.ErmService.ErmValidationResult ValidateSingleOrderResult) {
            this.ValidateSingleOrderResult = ValidateSingleOrderResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSingleOrderStateChange", WrapperNamespace="http://2gis.ru/erm/api/ordervalidation/2013/03", IsWrapped=true)]
    public partial class ValidateSingleOrderStateChangeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=0)]
        public long orderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=1)]
        public int newState;
        
        public ValidateSingleOrderStateChangeRequest() {
        }
        
        public ValidateSingleOrderStateChangeRequest(long orderId, int newState) {
            this.orderId = orderId;
            this.newState = newState;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSingleOrderStateChangeResponse", WrapperNamespace="http://2gis.ru/erm/api/ordervalidation/2013/03", IsWrapped=true)]
    public partial class ValidateSingleOrderStateChangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=0)]
        public ValidationRules.Replication.Comparison.Tests.ErmService.ErmValidationResult ValidateSingleOrderStateChangeResult;
        
        public ValidateSingleOrderStateChangeResponse() {
        }
        
        public ValidateSingleOrderStateChangeResponse(ValidationRules.Replication.Comparison.Tests.ErmService.ErmValidationResult ValidateSingleOrderStateChangeResult) {
            this.ValidateSingleOrderStateChangeResult = ValidateSingleOrderStateChangeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateOrders", WrapperNamespace="http://2gis.ru/erm/api/ordervalidation/2013/03", IsWrapped=true)]
    public partial class ValidateOrdersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=0)]
        public ValidationRules.Replication.Comparison.Tests.ErmService.ValidationType validationType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=1)]
        public long organizationUnitId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=2)]
        public ValidationRules.Replication.Comparison.Tests.ErmService.TimePeriod period;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=3)]
        public System.Nullable<long> ownerCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=4)]
        public bool includeOwnerDescendants;
        
        public ValidateOrdersRequest() {
        }
        
        public ValidateOrdersRequest(ValidationRules.Replication.Comparison.Tests.ErmService.ValidationType validationType, long organizationUnitId, ValidationRules.Replication.Comparison.Tests.ErmService.TimePeriod period, System.Nullable<long> ownerCode, bool includeOwnerDescendants) {
            this.validationType = validationType;
            this.organizationUnitId = organizationUnitId;
            this.period = period;
            this.ownerCode = ownerCode;
            this.includeOwnerDescendants = includeOwnerDescendants;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateOrdersResponse", WrapperNamespace="http://2gis.ru/erm/api/ordervalidation/2013/03", IsWrapped=true)]
    public partial class ValidateOrdersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2gis.ru/erm/api/ordervalidation/2013/03", Order=0)]
        public ValidationRules.Replication.Comparison.Tests.ErmService.ErmValidationResult ValidateOrdersResult;
        
        public ValidateOrdersResponse() {
        }
        
        public ValidateOrdersResponse(ValidationRules.Replication.Comparison.Tests.ErmService.ErmValidationResult ValidateOrdersResult) {
            this.ValidateOrdersResult = ValidateOrdersResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderValidationApplicationServiceChannel : ValidationRules.Replication.Comparison.Tests.ErmService.IOrderValidationApplicationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderValidationApplicationServiceClient : System.ServiceModel.ClientBase<ValidationRules.Replication.Comparison.Tests.ErmService.IOrderValidationApplicationService>, ValidationRules.Replication.Comparison.Tests.ErmService.IOrderValidationApplicationService {
        
        public OrderValidationApplicationServiceClient() {
        }
        
        public OrderValidationApplicationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderValidationApplicationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderValidationApplicationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderValidationApplicationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderResponse ValidateSingleOrder(ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderRequest request) {
            return base.Channel.ValidateSingleOrder(request);
        }
        
        public ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderStateChangeResponse ValidateSingleOrderStateChange(ValidationRules.Replication.Comparison.Tests.ErmService.ValidateSingleOrderStateChangeRequest request) {
            return base.Channel.ValidateSingleOrderStateChange(request);
        }
        
        public ValidationRules.Replication.Comparison.Tests.ErmService.ValidateOrdersResponse ValidateOrders(ValidationRules.Replication.Comparison.Tests.ErmService.ValidateOrdersRequest request) {
            return base.Channel.ValidateOrders(request);
        }
    }
}
